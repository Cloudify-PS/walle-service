##################################################################################
# Base type definitions
##################################################################################

node_types:

  # base type for provided cloudify types
  cloudify.nodes.Root:
    interfaces:
      cloudify.interfaces.lifecycle:
        create: {}
        configure: {}
        start: {}
        stop: {}
        delete: {}
      cloudify.interfaces.validation:
        creation: {}
        deletion: {}
      cloudify.interfaces.monitoring:
        start: {}
        stop: {}

  # A tier in a topology
  cloudify.nodes.Tier:
    derived_from: cloudify.nodes.Root

  # A host (physical / virtual or LXC) in a topology
  cloudify.nodes.Compute:
    derived_from: cloudify.nodes.Root
    properties:
      install_agent:
        default: False
      cloudify_agent:
        default: {}
      ip:
        default: ''
    interfaces:
      cloudify.interfaces.worker_installer:
        install: {}
        start: {}
        stop: {}
        uninstall: {}
        restart: {}
      cloudify.interfaces.plugin_installer:
        install: {}
      cloudify.interfaces.host:  # DEPRECATED
        get_state: {}
      cloudify.interfaces.monitoring_agent:
        install: {}
        start: {}
        stop: {}
        uninstall: {}

  # A Linux container with or without docker
  cloudify.nodes.Container:
    derived_from: cloudify.nodes.Compute

  # A storage volume in a topology
  cloudify.nodes.Volume:
    derived_from: cloudify.nodes.Root

  # A file system a volume should be formatted to
  cloudify.nodes.FileSystem:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        description: >
          Enables the use of already formatted volumes.
        type: boolean
        default: false
      partition_type:
        description: >
          The partition type. 83 is a Linux Native Partition.
        type: integer
        default: 83
      fs_type:
        description: >
          The type of the File System.
          Supported types are [ext2, ext3, ext4, fat, ntfs, swap]
        type: string
      fs_mount_path:
        description: >
          The path of the mount point.
        type: string

  # A storage Container (Object Store segment)
  cloudify.nodes.ObjectStorage:
    derived_from: cloudify.nodes.Root

  # An isolated virtual layer 2 domain or a logical / virtual switch
  cloudify.nodes.Network:
    derived_from: cloudify.nodes.Root

  # An isolated virtual layer 3 subnet with IP range
  cloudify.nodes.Subnet:
    derived_from: cloudify.nodes.Root

  cloudify.nodes.Port:
    derived_from: cloudify.nodes.Root

  # A network router
  cloudify.nodes.Router:
    derived_from: cloudify.nodes.Root

  # A virtual Load Balancer
  cloudify.nodes.LoadBalancer:
    derived_from: cloudify.nodes.Root

  # A virtual floating IP
  cloudify.nodes.VirtualIP:
    derived_from: cloudify.nodes.Root

  # A security group
  cloudify.nodes.SecurityGroup:
    derived_from: cloudify.nodes.Root

  # A middleware component in a topology
  cloudify.nodes.SoftwareComponent:
    derived_from: cloudify.nodes.Root

  cloudify.nodes.DBMS:
    derived_from: cloudify.nodes.SoftwareComponent

  cloudify.nodes.Database:
    derived_from: cloudify.nodes.Root

  cloudify.nodes.WebServer:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      port:
        default: 80

  cloudify.nodes.ApplicationServer:
    derived_from: cloudify.nodes.SoftwareComponent

  cloudify.nodes.MessageBusServer:
    derived_from: cloudify.nodes.SoftwareComponent

  # An application artifact to deploy
  cloudify.nodes.ApplicationModule:
    derived_from: cloudify.nodes.Root

  # A type for a Cloudify Manager, to be used in manager blueprints
  cloudify.nodes.CloudifyManager:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      cloudify:
        description: >
          Configuration for Cloudify Manager
        default:
          transient_deployment_workers_mode:
            enabled: true
            global_parallel_executions_limit: 10  # -1 means no limit
          resources_prefix: ''
          cloudify_agent:
            min_workers: 2
            max_workers: 5
            remote_execution_port: 22
            user: ubuntu
          workflows:
            task_retries: -1  # this means forever
            task_retry_interval: 30
          policy_engine:
            start_timeout: 30
      cloudify_packages:
        description: >
          Links to Cloudify packages to be installed on the manager

##################################################################################
# Base relationship definitions
##################################################################################
relationships:

  cloudify.relationships.depends_on:
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure: {}
        postconfigure: {}
        establish: {}
        unlink: {}
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure: {}
        postconfigure: {}
        establish: {}
        unlink: {}
    properties:
      connection_type:
        default: all_to_all

  cloudify.relationships.connected_to:
    derived_from: cloudify.relationships.depends_on

  cloudify.relationships.contained_in:
    derived_from: cloudify.relationships.depends_on

  cloudify.relationships.file_system_depends_on_volume:
    derived_from: cloudify.relationships.depends_on

  cloudify.relationships.file_system_contained_in_compute:
    derived_from: cloudify.relationships.contained_in

##################################################################################
# Workflows
##################################################################################
workflows:

  install: default_workflows.cloudify.plugins.workflows.install

  uninstall: default_workflows.cloudify.plugins.workflows.uninstall

##################################################################################
# Base artifact definitions
##################################################################################
plugins:

  default_workflows:
    executor: central_deployment_agent
    install: false
