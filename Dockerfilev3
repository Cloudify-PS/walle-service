#INSTALL & BUILD IMAGE
# install Docker, build pre image from first Dockerfile :
# "sudo docker build -f Dockerfile -t pre-walle ."
# then, build "sudo docker build -f Dockerfilev3 -t post-walle ."
#
#RUN A CONTAINER
#
#sudo docker run -v /pathto/walle-service:/walle-service:ro  post-walle
#sudo docker run -v /mnt/data/Projects/cloudify/walle/walle-service:/walle-service:ro  post-walle
#
#
#access2 via docker exec -it [container-id] bash
#access3 via docker run -t -i mysnapshot /bin/bash

FROM pre-walle
RUN echo -e '#!/bin/sh\nexit 0' > /usr/sbin/policy-rc.d
RUN apt-get install -y supervisor emacs24-nox curl
RUN mkdir -p /var/run/sshd /var/log/supervisor
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

RUN . /venv/bin/activate;
ENV DB_IP=0.0.0.0 \
    WALLE_IP=0.0.0.0 \
    DB_USER=walle \
    DB_NAME=walle \
    DB_PASS=supersecret \
    IS_PRODUCTION=false \
    SKIP_INSTALLATION=false
#WALLE_EXISTING_DB=172.17.0.2 \

#setup DB part 1
RUN /walle-service/blueprints/scripts/install_postgresql.sh
RUN chmod 777 /root
RUN /etc/init.d/postgresql start && /walle-service/blueprints/scripts/install_walle_postgresql.sh

#setup walle part 2
RUN /walle-service/blueprints/scripts/walle/install_dependencies.sh
RUN pip install -r /walle-service/walle-api-server/requirements.txt && pip install /walle-service/walle-api-server

RUN useradd -m ubuntu
RUN apt-get remove -y python-requests; wget https://bootstrap.pypa.io/get-pip.py; python get-pip.py;
RUN pip install --upgrade requests
ADD . /walle-service
RUN . /venv/bin/activate; /etc/init.d/postgresql start; /walle-service/blueprints/scripts/walle/configure.sh
ENV WALLE_DB=postgresql://walle:supersecret@0.0.0.0/walle

#debug
RUN pip uninstall -y walle-service
RUN apt-get remove -y gunicorn
RUN pip install gunicorn


EXPOSE 8001 5432
CMD ["/usr/bin/supervisord"]