[tox]
envlist = pep8,unittests,integration,validate-blueprints
minversion = 1.9
skipsdist = True


[testenv]

passenv =
    WALLE_URL
    WALLE_INT_TESTS_CONF

setenv =
    VIRTUAL_ENV={envdir}
    WALLE_LOGGING_FILE=/tmp/walle-api.log
    WALLE_LOGGING_LEVEL=DEBUG
usedevelop = True
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       -r{toxinidir}/dev-requirements.txt
whitelist_externals = bash
                      rm


[testenv:pep8]
commands =
    flake8 walle_api_server ../blueprints ../walle-manage-cli {posargs}

[testenv:unittests]

commands =
    nosetests walle_api_server/tests/unittests/ --with-coverage  --cover-package=walle_api_server {posargs}

[testenv:integration]
commands =
    nosetests -s walle_api_server/tests/integration/ --with-coverage  --cover-package=walle_api_server {posargs}

[testenv:validate-blueprints]
deps = -r{toxinidir}/cfy-requirements.txt
commands =
    cfy init
    cfy blueprints validate -p ../blueprints/vcloud-walle-blueprint.yaml
    cfy blueprints validate -p ../blueprints/vcloud-valid-blueprint.yaml
    cfy blueprints validate -p ../blueprints/openstack-walle-blueprint.yaml
    rm -rf .cloudify

[testenv:post-deployment]
commands =
    nosetests -s walle_api_server/tests/post_deployment {posargs}

[flake8]
show-source = True
ignore = H306,H301,H405,F811,H202
exclude=.venv,.tox,dist,*egg,etc,build,.idea
filename=*.py
