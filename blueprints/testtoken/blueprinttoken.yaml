tosca_definitions_version: cloudify_dsl_1_0

imports:

    - http://s3.amazonaws.com/vcloud-score/types.yaml
    - https://raw.githubusercontent.com/cloudify-cosmo/tosca-vcloud-plugin/CFY-3343/plugin.yaml
    - http://s3.amazonaws.com/vcloud-score/cloudify-fabric-plugin/1.2/plugin.yaml

inputs:

  catalog:
    type: string
  template:
    type: string
  network_name:
    type: string
  gateway_name:
    type: string
  #public_ip:
  #  type: string
  server_name:
    type: string
 
  vcloud_username:
    type: string
  vcloud_password:
    type: string
  vcloud_url:
    type: string
    default: 'iam.vchs.vmware.com'
  vcloud_service:
    type: string
    default: ''
  vcloud_service_type:
    default: 'ondemand'
  vcloud_api_version:
    type: string
    default: '5.7'
  vcloud_vdc:
    type: string
  vcloud_instance:
    type: string
    default: ''

node_types:

    vcloud_configuration:
        derived_from: cloudify.nodes.Root
        properties:
            vcloud_config: {}


node_templates:

    vcloud_configuration:
        type: vcloud_configuration
        properties:
            vcloud_config:
                username: { get_input: vcloud_username }
                password: { get_input: vcloud_password }
                url: { get_input: vcloud_url }
                instance: { get_input: vcloud_instance }
                vdc: { get_input: vcloud_vdc }
                org: { get_input: vcloud_vdc }
                service_type: { get_input: vcloud_service_type }
                service: { get_input: vcloud_service }
                api_version: { get_input: vcloud_api_version }

    example_server:
        type: cloudify.vcloud.nodes.Server
        properties:
            server:
                name: { get_input: server_name }
                catalog: { get_input: catalog }
                template: { get_input: template }
            install_agent: false
            management_network: { get_input: network_name }
            vcloud_config: { get_property: [vcloud_configuration, vcloud_config] }


